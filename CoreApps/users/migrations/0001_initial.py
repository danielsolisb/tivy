# Generated by Django 4.2.25 on 2025-10-20 01:19

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='El email será el nombre de usuario único.', max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(help_text='Nombre del negocio (Ej: Peluquería Glamour).', max_length=150)),
                ('slug', models.SlugField(help_text='Identificador único para la URL del negocio.', max_length=100, unique=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='business/photos/')),
                ('bio', models.TextField(blank=True, help_text='Una breve descripción del negocio.')),
                ('location_name', models.CharField(blank=True, help_text='Nombre del lugar físico (Ej: Centro Comercial El Sol).', max_length=200)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('business_type', models.CharField(choices=[('CITAS', 'Basado en Citas'), ('TIENDA', 'Tienda Minorista')], default='CITAS', max_length=10)),
                ('service_delivery_type', models.CharField(choices=[('LOCAL', 'Solo atiende en su local'), ('DOMICILIO', 'Solo atiende a domicilio'), ('AMBOS', 'Ofrece ambos servicios')], default='LOCAL', help_text='Define el modelo de atención general del negocio.', max_length=10)),
                ('travel_buffer', models.DurationField(default=datetime.timedelta(seconds=1800), help_text='Tiempo extra que se bloqueará para traslados en servicios a domicilio.')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(help_text='El dueño o administrador del negocio.', on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre del miembro del personal (Ej: Ana Pérez).', max_length=150)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='staff/photos/')),
                ('bio', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_members', to='users.business')),
                ('user', models.OneToOneField(blank=True, help_text='Cuenta de usuario para que el personal inicie sesión (opcional).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='staff_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='users.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('business', 'email'), ('user', 'business')},
            },
        ),
    ]
